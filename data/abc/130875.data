{'TMP': 'C:\\Users\\flm\\AppData\\Local\\Temp', 'COMPUTERNAME': 'FLM-PC', 'USERDOMAIN': 'flm-PC', 'PSMODULEPATH': 'C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 58 Stepping 9, GenuineIntel', 'PROGRAMFILES': 'C:\\Program Files', 'PROCESSOR_REVISION': '3a09', 'SYSTEMROOT': 'C:\\Windows', 'PATH': 'C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x86;C:\\Program Files (x86)\\Intel\\OpenCL SDK\\2.0\\bin\\x64;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Java\\jdk1.7.0_13\\bin;C:\\Program Files\\Java\\jdk1.7.0_13\\jre\\bin;C:\\Python27;G:\\android\\adt\\sdk\\platform-tools;G:\\android\\adt\\sdk\\tools;C:\\Python27\\Scripts;C:\\Users\\flm\\AppData\\Local\\Programs\\Python\\Python36-32;C:\\Python36\\Scripts;F:\\Git\\cmd;C:\\Program Files (x86)\\Nmap;C:\\Program Files (x86)\\SSH Communications Security\\SSH Secure Shell', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'WINDOWS_TRACING_FLAGS': '3', 'TEMP': 'C:\\Users\\flm\\AppData\\Local\\Temp', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'LOCALAPPDATA': 'C:\\Users\\flm\\AppData\\Local', 'HOMEPATH': '\\Users\\flm', 'JAVA_HOME': 'C:\\Program Files\\Java\\jdk1.7.0_13', 'PROGRAMW6432': 'C:\\Program Files', 'USERNAME': 'flm', 'LOGONSERVER': '\\\\FLM-PC', 'PROMPT': '$P$G', 'SESSIONNAME': 'Console', 'PROGRAMDATA': 'C:\\ProgramData', 'CLASSPATH': '.;C:\\Program Files\\Java\\jdk1.7.0_13\\lib;C:\\Program Files\\Java\\jdk1.7.0_13\\lib\\tools.jar', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'FP_NO_HOST_CHECK': 'NO', 'WINDIR': 'C:\\Windows', 'WINDOWS_TRACING_LOGFILE': 'C:\\BVTBin\\Tests\\installpackage\\csilogfile.log', 'HOMEDRIVE': 'C:', 'SYSTEMDRIVE': 'C:', 'COMSPEC': 'C:\\Windows\\system32\\cmd.exe', 'NUMBER_OF_PROCESSORS': '4', 'APPDATA': 'C:\\Users\\flm\\AppData\\Roaming', 'PROCESSOR_LEVEL': '6', '#ENVTSLOGSHELLEXT2180': '308898544', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'OS': 'Windows_NT', 'PUBLIC': 'C:\\Users\\Public', 'USERPROFILE': 'C:\\Users\\flm'}